-----------------------------------------------------描述: 将星网络消息处理及其逻辑--时间: 2012.6.6--作者: qbw---------------------------------------------------MsgCampBattle = {}local p = MsgCampBattle;local ActionType = {		ChaosBattleActionOpenBoard = 0,	--打开活动界面		ChaosBattleActionSignUp = 1,	--报名		ChaosBattleActionSetAuto = 2,	--设置自动参赛		ChaosBattleActionEnter = 3,	--进入大乱斗		ChaosBattleActionLeave = 4,	--离开大乱斗		ChaosBattleActionGoldEncourage = 5,	--金币鼓舞		ChaosBattleActionSilverEncourage = 6,	--银币鼓舞		ChaosBattleActionResetCD = 7,		--重置cd		ChaosBattleActionGetRank= 8,		--查询排行榜}local StateType = {		ChaosBattleStateNotOpen = 0,	--未开启		ChaosBattleStatePrepare = 1,	--准备		ChaosBattleStateOpen = 2,	--开启		ChaosBattleStateClosing = 3,	--准备关闭		ChaosBattleStateComplete = 4,	--关闭}--=======================阵营列表=========================--function p.SendCampBattleGetCampList()	local netdata = createNDTransData(NMSG_Type._MSG_CHAOSBATTLE_CAMPLIST);	if nil == netdata then		return false;	end	netdata:WriteByte(0);		SendMsg(netdata);	netdata:Free();	LogInfo("qboy  SendCampBattleGetCampList");	ShowLoadBar();	return true;end--阵营列表初始化function p.ProcessCampBattleCamplist(netdata)	local idUser = GetPlayerId();			local nAttCount = netdata:ReadShort();	local nDefCount = netdata:ReadShort();		LogInfo("qboy  SendCampBattleAction nAttCount"..nAttCount);	LogInfo("qboy  SendCampBattleAction nDefCount"..nDefCount);		for i=1,nAttCount do						local nUserId   =  netdata:ReadInt();			local sUserName	=  netdata:ReadUnicodeString();			CampBattle.AddPlayerToList(nUserId,1,sUserName);			LogInfo("qboy ProcessCampBattleCamplist attlist nUserId:"..nUserId.." sUserName:"..sUserName);	end			for i=1,nDefCount do						local nUserId   =  netdata:ReadInt();			local sUserName	=  netdata:ReadUnicodeString();			CampBattle.AddPlayerToList(nUserId,2,sUserName);			LogInfo("qboy ProcessCampBattleCamplist Deflist nUserId:"..nUserId.." sUserName:"..sUserName);	end	--CampBattle.RefreshInfo();	end--=======================xxxxxxxxxxxx======================----=======================action相关消息========================--function p.SendCampBattleAction(nActionType)	local netdata = createNDTransData(NMSG_Type._MSG_CHAOSBATTLE_ACTION);	if nil == netdata then		return false;	end	netdata:WriteByte(nActionType);				SendMsg(netdata);	netdata:Free();	LogInfo("qboy  SendCampBattleAction nActionType"..nActionType);			--刷新活动状态不显示loadbar	if nActionType ~= ActionType.ChaosBattleActionOpenBoard then		ShowLoadBar();	end		return true;end--查询排行榜function p.SendCampBattleGetRankAction()	p.SendCampBattleAction(ActionType.ChaosBattleActionGetRank)end--报名战斗function p.SendCampBattleSignUpAction()	p.SendCampBattleAction(ActionType.ChaosBattleActionSignUp)end--自动战斗function p.SendCampBattleSetAutoAction()	p.SendCampBattleAction(ActionType.ChaosBattleActionSetAuto)end--金币鼓舞function p.SendCampBattleGoldEncourageAction()	p.SendCampBattleAction(ActionType.ChaosBattleActionGoldEncourage)end--银币鼓舞function p.SendCampBattleSilverEncourageAction()	p.SendCampBattleAction(ActionType.ChaosBattleActionSilverEncourage)end--重置cdfunction p.SendCampBattleResetCDAction()	p.SendCampBattleAction(ActionType.ChaosBattleActionResetCD)end--进入界面function p.SendCampBattleEnterAction()	p.SendCampBattleAction(ActionType.ChaosBattleActionEnter)end--退出界面function p.SendCampBattleQuitBattleAction()	p.SendCampBattleAction(ActionType.ChaosBattleActionLeave)end--查询活动状态function p.SendCampBattleOpenBoard()	p.SendCampBattleAction(ActionType.ChaosBattleActionOpenBoard)end--========================xxxxxxxxxxxx==========================--function  p.ProcessCampBattleUpdatePlayerInfo(netdata)		local nComboKill = netdata:ReadShort();	local nWin = netdata:ReadShort();	local nLost = netdata:ReadShort();	local nCDTime = netdata:ReadShort();	local nEncorageLev = netdata:ReadShort();	local nTopComboKill = netdata:ReadShort(); 	local nRepute = netdata:ReadInt();	local nScore = netdata:ReadInt();	local nMoney = netdata:ReadInt();	local nGold = netdata:ReadInt();	CampBattle.ProccessResultInfo(nComboKill,nWin,nLost,nCDTime,nEncorageLev,nTopComboKill,nRepute,nScore,nMoney,nGold)	LogInfo("qboy ProcessCampBattleUpdatePlayerInfo nComboKill:"..nComboKill.." nWin:"..nWin.." nLost"..nLost);	LogInfo("qboy ProcessCampBattleUpdatePlayerInfo nCDTime:"..nCDTime.." nEncorageLev:"..nEncorageLev.." nTopComboKill"..nTopComboKill);	LogInfo("qboy ProcessCampBattleUpdatePlayerInfo nRepute:"..nRepute.." nScore:"..nScore.." nMoney"..nMoney.." nGold"..nGold);	end--[[local StateType = {		ChaosBattleStateNotOpen = 0,	--未开启		ChaosBattleStatePrepare = 1,	--准备		ChaosBattleStateOpen = 2,	--开启		ChaosBattleStateClosing = 3,	--准备关闭		ChaosBattleStateComplete = 4,	--关闭}--]]function p.ProcessCampBattleBoard(netdata)	LogInfo("qboy ProcessCampBattleBoard")		local nBattleState = netdata:ReadByte();	local nIsAutoSignUp = netdata:ReadByte();		local nElapseTime = netdata:ReadInt();	--秒		CampBattle.SetBattleEndTime(nElapseTime);		LogInfo("qboy ProcessCampBattleBoard nElapseTime:"..nElapseTime)	if StateType.ChaosBattleStateComplete == nBattleState then			CampBattle.ActivityState = nBattleState;			CampBattle.CloseUI();	end	endfunction p.ProcessCampBattleListChange(netdata)	LogInfo("qboy ProcessCampBattleListChange")	local nDelCount = netdata:ReadShort();	local nAttAddCount = netdata:ReadShort();	local nDefAddCount = netdata:ReadShort();	local nEnterCount = netdata:ReadShort();	for i=1,nDelCount do		local nUserId   =  netdata:ReadInt();		CampBattle.RemovePlayerFromList(nUserId);			end		for i=1,nAttAddCount do			local nUserId   =  netdata:ReadInt();			local sUserName	=  netdata:ReadUnicodeString();			CampBattle.AddPlayerToList(nUserId,1,sUserName);			LogInfo("qboy ProcessCampBattleListChange attlist nUserId:"..nUserId.." sUserName:"..sUserName);	end			for i=1,nDefAddCount do					local nUserId   =  netdata:ReadInt();			local sUserName	=  netdata:ReadUnicodeString();			CampBattle.AddPlayerToList(nUserId,2,sUserName);			LogInfo("qboy ProcessCampBattleListChange deflist nUserId:"..nUserId.." sUserName:"..sUserName);	end		--[[	for i=1,nEnterCount do		local nUserId   =  netdata:ReadInt();		LogInfo("qboy msg EnterBattle"..nUserId)	end--]]	LogInfo("qboy msg EnterBattle nEnterCount:"..nEnterCount)	for i=1,nEnterCount do		local nUserId   =  netdata:ReadInt();		CampBattle.EnterBattle(nUserId);	end	    	--CampBattle.RefreshInfo();	endfunction p.ProcessCampBattleMainreport(netdata)		local nCount = netdata:ReadShort();	--LogInfo("qboy ProcessCampBattleMainreport nCount:"..nCount)	for i=1,nCount do		local nIdWin = netdata:ReadInt();		local nIdLost = netdata:ReadInt();		local nMoney = netdata:ReadInt();		local nRepute = netdata:ReadInt();		local nWinCombo =  netdata:ReadShort();		local nLoseCombo =  netdata:ReadShort();		local swinName	=  netdata:ReadUnicodeString();		local sloserName	=  netdata:ReadUnicodeString();				--LogInfo("qboy ProcessCampBattleMainreport "..nIdWin.." "..nIdLost.." "..nMoney.." "..nRepute.." "..nWinCombo.." "..nLoseCombo)		CampBattle.AddMainReport(nIdWin,nIdLost,nMoney,nRepute,nWinCombo,nLoseCombo,swinName,sloserName);	end	endfunction p.ProcessCampBattleAddReport(netdata)	--LogInfo("qboy ProcessCampBattleAddReport")	local nPlayerId = GetPlayerId();	local nCount = netdata:ReadShort();	for i=1,nCount do		local nIdWin = netdata:ReadInt();		local nIdLost = netdata:ReadInt();		local nMoney = netdata:ReadInt();		local nRepute = netdata:ReadInt();		local nWinCombo =  netdata:ReadShort();		local nLoseCombo =  netdata:ReadShort();		local swinName	=  netdata:ReadUnicodeString();		local sloserName	=  netdata:ReadUnicodeString();				--LogInfo("qboy ProcessCampBattleAddReport "..nIdWin.." "..nIdLost.." "..nMoney.." "..nRepute.." "..nWinCombo.." "..nLoseCombo)		CampBattle.AddMainReport(nIdWin,nIdLost,nMoney,nRepute,nWinCombo,nLoseCombo,swinName,sloserName);				if nPlayerId == nIdWin or nPlayerId == nIdLost then			CampBattle.AddUserReport(nIdWin,nIdLost,nMoney,nRepute,nWinCombo,nLoseCombo,swinName,sloserName);					end	end	endfunction p.ProcessCampBattleRankboard(netdata)	LogInfo("qboy ProcessCampBattleRankboard")	local nPlayerRank = netdata:ReadShort();--玩家排名	local nScoreCount = netdata:ReadByte();	local nWinStreakCount = netdata:ReadByte();	CampBattle.ResetBoardTable();		for i=1,nScoreCount do		local nUserId = netdata:ReadInt();		local nScore = netdata:ReadInt();		local sName = netdata:ReadUnicodeString();				CampBattle.AddPlayerToScoreBoard(sName,nUserId,nScore);	end		for i=1,nWinStreakCount do		local nUserId = netdata:ReadInt();		local nStreak = netdata:ReadInt();		local sName = netdata:ReadUnicodeString();					CampBattle.AddPlayerToStreakBoard(sName,nUserId,nStreak);	end		CampBattle.RefreshBoard();endfunction p.ProcessCampBattleUserreport(netdata)	local nCount = netdata:ReadShort();	--LogInfo("qboy ProcessCampBattleUserreport nCount:"..nCount)	for i=1,nCount do		local nIdWin = netdata:ReadInt();		local nIdLost = netdata:ReadInt();		local nMoney = netdata:ReadInt();		local nRepute = netdata:ReadInt();		local nWinCombo =  netdata:ReadShort();		local nLoseCombo =  netdata:ReadShort();		local swinName	=  netdata:ReadUnicodeString();		local sloserName	=  netdata:ReadUnicodeString();				--LogInfo("qboy ProcessCampBattleUserreport "..nIdWin.." "..nIdLost.." "..nMoney.." "..nRepute.." "..nWinCombo.." "..nLoseCombo)		CampBattle.AddUserReport(nIdWin,nIdLost,nMoney,nRepute,nWinCombo,nLoseCombo,swinName,sloserName);	endendfunction p.ProcessCampBattleAction(netdata)	CloseLoadBar();	LogInfo("qboy ProcessCampBattleAction")	local nAction = netdata:ReadByte();	local bIsSuccess = netdata:ReadByte();		LogInfo("qboy ProcessCampBattleAction nAction bIsSuccess"..nAction.." "..bIsSuccess)	--离开界面	if nAction == ActionType.ChaosBattleActionLeave then		if bIsSuccess == 1 then			CampBattle.CloseUI();			CampBattle.ActivityState = StateType.ChaosBattleStateClosing;		end	end	endfunction p.ProcessCampBattleWeakInfo(netdata)	LogInfo("qboy ProcessCampBattleWeakInfo")	local nAttWeak = netdata:ReadByte();	local nDefWeak = netdata:ReadByte();	LogInfo("qboy ProcessCampBattleWeakInfo"..nAttWeak.." "..nDefWeak)			local scene = GetSMGameScene();	if nil == scene then		LogInfo("qboy ProcessCampBattleWeakInfo scene nil");			return nil;	end		local layer = GetUiLayer(scene, NMAINSCENECHILDTAG.BattleUI_Title);		BattleUI_Title.SetFightersLevel( layer, nAttWeak, nDefWeak )endRegisterNetMsgHandler(NMSG_Type._MSG_CHAOSBATTLE_CAMPLIST, "p.ProcessCampBattleCamplist", p.ProcessCampBattleCamplist);RegisterNetMsgHandler(NMSG_Type._MSG_CHAOSBATTLE_UPDATEPLAYERINFO, "p.ProcessCampBattleUpdatePlayerInfo", p.ProcessCampBattleUpdatePlayerInfo);RegisterNetMsgHandler(NMSG_Type._MSG_CHAOSBATTLE_BOARD, "p.ProcessCampBattleBoard", p.ProcessCampBattleBoard);RegisterNetMsgHandler(NMSG_Type._MSG_CHAOSBATTLE_ADDREPORT, "p.ProcessCampBattleAddReport", p.ProcessCampBattleAddReport);RegisterNetMsgHandler(NMSG_Type._MSG_CHAOSBATTLE_CAMPLISTCHANGE, "p.ProcessCampBattleListChange", p.ProcessCampBattleListChange);RegisterNetMsgHandler(NMSG_Type._MSG_CHAOSBATTLE_MAINREPORT, "p.ProcessCampBattleMainreport", p.ProcessCampBattleMainreport);RegisterNetMsgHandler(NMSG_Type._MSG_CHAOSBATTLE_RANKBOARD, "p.ProcessCampBattleRankboard", p.ProcessCampBattleRankboard);RegisterNetMsgHandler(NMSG_Type._MSG_CHAOSBATTLE_USERREPORT, "p.ProcessCampBattleUserreport", p.ProcessCampBattleUserreport);RegisterNetMsgHandler(NMSG_Type._MSG_CHAOSBATTLE_ACTION_RET, "p.ProcessCampBattleAction", p.ProcessCampBattleAction);RegisterNetMsgHandler(NMSG_Type._MSG_CHAOSBATTLE_WEEKINFO, "p.ProcessCampBattleWeakInfo", p.ProcessCampBattleWeakInfo);